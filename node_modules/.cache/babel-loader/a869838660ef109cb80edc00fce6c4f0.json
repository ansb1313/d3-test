{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/apple/Downloads/react-d3-tree-with-material-ui-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _objectSpread from \"/Users/apple/Downloads/react-d3-tree-with-material-ui-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/apple/Downloads/react-d3-tree-with-material-ui-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/apple/Downloads/react-d3-tree-with-material-ui-forked/src/App.js\",\n    _templateObject;\n\nimport { Tooltip, Typography } from \"@material-ui/core\";\nimport React, { createRef } from \"react\";\nimport styled from 'styled-components';\nimport Tree from \"react-d3-tree\";\nimport { useCenteredTree } from \"./helpers\";\nimport \"./styles.css\";\nvar orgChart = {\n  name: \"Master Richtung Maschinenbau und Wirtschaft\",\n  children: [{\n    name: \"Energie- und Verfahrenstechnik\",\n    children: [{\n      name: \"Pflichtfächer\",\n      children: [{\n        name: \"Einführung in die Wirtschaftspolitik\"\n      }, {\n        name: \"Industrieökonomik\"\n      }, {\n        name: \"Nanotechnologie für Maschinenbauer und Verfahrenstechniker\"\n      }, {\n        name: \"Thermische Verfahrens- und Prozesstechnik\"\n      }, {\n        name: \"Übung zu Industrieökonomik\"\n      }, {\n        name: \"Verbrennungsmotoren\"\n      }]\n    }]\n  }]\n};\nvar containerStyles = {\n  width: \"100vw\",\n  height: \"100vh\"\n};\n\nvar renderNodeWithCustomEvents = function renderNodeWithCustomEvents(_ref) {\n  var nodeDatum = _ref.nodeDatum,\n      toggleNode = _ref.toggleNode,\n      wrapper = _ref.wrapper;\n  // Horizontal orientation\n  var y = 15;\n  var x = -15;\n  var output = \"\";\n  var nodeNameArray = nodeDatum.name.split(\" \");\n  return /*#__PURE__*/React.createElement(\"g\", {\n    ref: wrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: /*#__PURE__*/React.createElement(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 16\n      }\n    }, nodeDatum.name),\n    arrow: true,\n    placement: \"right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    r: \"15\",\n    onClick: nodeDatum.children ? toggleNode : \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }))), nodeNameArray.length === 1 ? /*#__PURE__*/React.createElement(\"text\", {\n    fill: \"black\",\n    strokeWidth: \"1\",\n    x: x.toString(),\n    y: (y + 20).toString(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, nodeDatum.name) : nodeNameArray.map(function (name, index) {\n    if ((index + 1) % 2 === 0) {\n      y = y + 20;\n      output = nodeNameArray[index - 1] + \" \" + nodeNameArray[index];\n      return /*#__PURE__*/React.createElement(\"text\", {\n        key: index,\n        fill: \"black\",\n        strokeWidth: \"1\",\n        x: x.toString(),\n        y: y.toString(),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }, output);\n    } else if ((index + 1) % 2 !== 0 && index + 1 === nodeNameArray.length) {\n      y = y + 20;\n      return /*#__PURE__*/React.createElement(\"text\", {\n        key: index,\n        fill: \"black\",\n        strokeWidth: \"1\",\n        x: x.toString(),\n        y: y.toString(),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }\n      }, name);\n    } else return \"\";\n  }));\n};\n\nexport default function App() {\n  var _useCenteredTree = useCenteredTree(),\n      _useCenteredTree2 = _slicedToArray(_useCenteredTree, 2),\n      translate = _useCenteredTree2[0],\n      containerRef = _useCenteredTree2[1];\n\n  var wrapper = createRef();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: containerStyles,\n    ref: containerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Tree, {\n    data: orgChart,\n    collapsible: true,\n    enableLegacyTransitions: true,\n    orientation: \"horizontal\",\n    depthFactor: \"250\",\n    shouldCollapseNeighborNodes: false,\n    translate: translate,\n    renderCustomNodeElement: function renderCustomNodeElement(props) {\n      return renderNodeWithCustomEvents(_objectSpread(_objectSpread({}, props), {}, {\n        wrapper: wrapper\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }));\n}\nvar Route = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  width: 120px;\\n  height: 42px;\\n  border: solid 1px #111;\\n\"])));","map":{"version":3,"sources":["/Users/apple/Downloads/react-d3-tree-with-material-ui-forked/src/App.js"],"names":["Tooltip","Typography","React","createRef","styled","Tree","useCenteredTree","orgChart","name","children","containerStyles","width","height","renderNodeWithCustomEvents","nodeDatum","toggleNode","wrapper","y","x","output","nodeNameArray","split","length","toString","map","index","App","translate","containerRef","props","Route","div"],"mappings":";;;;;;;;AAAA,SAASA,OAAT,EAAkBC,UAAlB,QAAoC,mBAApC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAO,cAAP;AAEA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,IAAI,EAAE,6CADS;AAEfC,EAAAA,QAAQ,EAAE,CACR;AACED,IAAAA,IAAI,EAAE,gCADR;AAEEC,IAAAA,QAAQ,EAAE,CACR;AACED,MAAAA,IAAI,EAAE,eADR;AAEEC,MAAAA,QAAQ,EAAE,CACR;AACED,QAAAA,IAAI,EAAE;AADR,OADQ,EAIR;AACEA,QAAAA,IAAI,EAAE;AADR,OAJQ,EAOR;AACEA,QAAAA,IAAI,EAAE;AADR,OAPQ,EAUR;AACEA,QAAAA,IAAI,EAAE;AADR,OAVQ,EAaR;AACEA,QAAAA,IAAI,EAAE;AADR,OAbQ,EAgBR;AACEA,QAAAA,IAAI,EAAE;AADR,OAhBQ;AAFZ,KADQ;AAFZ,GADQ;AAFK,CAAjB;AAmCA,IAAME,eAAe,GAAG;AACtBC,EAAAA,KAAK,EAAE,OADe;AAEtBC,EAAAA,MAAM,EAAE;AAFc,CAAxB;;AAKA,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,OAAwC;AAAA,MAArCC,SAAqC,QAArCA,SAAqC;AAAA,MAA1BC,UAA0B,QAA1BA,UAA0B;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACzE;AACA,MAAIC,CAAC,GAAG,EAAR;AACA,MAAIC,CAAC,GAAG,CAAC,EAAT;AAEA,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,aAAa,GAAGN,SAAS,CAACN,IAAV,CAAea,KAAf,CAAqB,GAArB,CAApB;AACA,sBACE;AAAG,IAAA,GAAG,EAAEL,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AACE,IAAA,KAAK,eAAE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaF,SAAS,CAACN,IAAvB,CADT;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,SAAS,EAAC,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AACE,IAAA,CAAC,EAAC,IADJ;AAEE,IAAA,OAAO,EACLM,SAAS,CAACL,QAAV,GACIM,UADJ,GAEI,EALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CALF,CADF,EAkBGK,aAAa,CAACE,MAAd,KAAyB,CAAzB,gBACC;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAC,GAFd;AAGE,IAAA,CAAC,EAAEJ,CAAC,CAACK,QAAF,EAHL;AAIE,IAAA,CAAC,EAAE,CAACN,CAAC,GAAG,EAAL,EAASM,QAAT,EAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGT,SAAS,CAACN,IANb,CADD,GAUCY,aAAa,CAACI,GAAd,CAAkB,UAAChB,IAAD,EAAOiB,KAAP,EAAiB;AACjC,QAAI,CAACA,KAAK,GAAG,CAAT,IAAc,CAAd,KAAoB,CAAxB,EAA2B;AACzBR,MAAAA,CAAC,GAAGA,CAAC,GAAG,EAAR;AACAE,MAAAA,MAAM,GAAGC,aAAa,CAACK,KAAK,GAAG,CAAT,CAAb,GAA2B,GAA3B,GAAiCL,aAAa,CAACK,KAAD,CAAvD;AACA,0BACE;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,WAAW,EAAC,GAHd;AAIE,QAAA,CAAC,EAAEP,CAAC,CAACK,QAAF,EAJL;AAKE,QAAA,CAAC,EAAEN,CAAC,CAACM,QAAF,EALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGJ,MAPH,CADF;AAWD,KAdD,MAcO,IACL,CAACM,KAAK,GAAG,CAAT,IAAc,CAAd,KAAoB,CAApB,IACAA,KAAK,GAAG,CAAR,KAAcL,aAAa,CAACE,MAFvB,EAGL;AACAL,MAAAA,CAAC,GAAGA,CAAC,GAAG,EAAR;AACA,0BACE;AACE,QAAA,GAAG,EAAEQ,KADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,WAAW,EAAC,GAHd;AAIE,QAAA,CAAC,EAAEP,CAAC,CAACK,QAAF,EAJL;AAKE,QAAA,CAAC,EAAEN,CAAC,CAACM,QAAF,EALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGf,IAPH,CADF;AAWD,KAhBM,MAgBA,OAAO,EAAP;AACR,GAhCD,CA5BJ,CADF;AAiED,CAxED;;AA0EA,eAAe,SAASkB,GAAT,GAAe;AAC5B,yBAAkCpB,eAAe,EAAjD;AAAA;AAAA,MAAOqB,SAAP;AAAA,MAAkBC,YAAlB;;AACA,MAAMZ,OAAO,GAAGb,SAAS,EAAzB;AACA,sBACE;AAAK,IAAA,KAAK,EAAEO,eAAZ;AAA6B,IAAA,GAAG,EAAEkB,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAErB,QADR;AAEE,IAAA,WAAW,EAAE,IAFf;AAGE,IAAA,uBAAuB,EAAE,IAH3B;AAIE,IAAA,WAAW,EAAC,YAJd;AAKE,IAAA,WAAW,EAAC,KALd;AAME,IAAA,2BAA2B,EAAE,KAN/B;AAOE,IAAA,SAAS,EAAEoB,SAPb;AAQE,IAAA,uBAAuB,EAAE,iCAACE,KAAD;AAAA,aACvBhB,0BAA0B,iCAAMgB,KAAN;AAAab,QAAAA,OAAO,EAAPA;AAAb,SADH;AAAA,KAR3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAgBD;AAED,IAAMc,KAAK,GAAG1B,MAAM,CAAC2B,GAAV,oIAAX","sourcesContent":["import { Tooltip, Typography } from \"@material-ui/core\";\nimport React, { createRef } from \"react\";\nimport styled from 'styled-components';\nimport Tree from \"react-d3-tree\";\nimport { useCenteredTree } from \"./helpers\";\nimport \"./styles.css\";\n\nconst orgChart = {\n  name: \"Master Richtung Maschinenbau und Wirtschaft\",\n  children: [\n    {\n      name: \"Energie- und Verfahrenstechnik\",\n      children: [\n        {\n          name: \"Pflichtfächer\",\n          children: [\n            {\n              name: \"Einführung in die Wirtschaftspolitik\"\n            },\n            {\n              name: \"Industrieökonomik\"\n            },\n            {\n              name: \"Nanotechnologie für Maschinenbauer und Verfahrenstechniker\"\n            },\n            {\n              name: \"Thermische Verfahrens- und Prozesstechnik\"\n            },\n            {\n              name: \"Übung zu Industrieökonomik\"\n            },\n            {\n              name: \"Verbrennungsmotoren\"\n            }\n          ]\n        },\n\n      ]\n    },\n  ]\n};\n\nconst containerStyles = {\n  width: \"100vw\",\n  height: \"100vh\"\n};\n\nconst renderNodeWithCustomEvents = ({ nodeDatum, toggleNode, wrapper }) => {\n  // Horizontal orientation\n  let y = 15;\n  let x = -15;\n\n  let output = \"\";\n  let nodeNameArray = nodeDatum.name.split(\" \");\n  return (\n    <g ref={wrapper}>\n      <Tooltip\n        title={<Typography>{nodeDatum.name}</Typography>}\n        arrow\n        placement=\"right\"\n      >\n        <Route>\n        <circle\n          r=\"15\"\n          onClick={\n            nodeDatum.children\n              ? toggleNode\n              : \"\"\n          }\n        />\n        </Route>\n      </Tooltip>\n\n      {nodeNameArray.length === 1 ? (\n        <text\n          fill=\"black\"\n          strokeWidth=\"1\"\n          x={x.toString()}\n          y={(y + 20).toString()}\n        >\n          {nodeDatum.name}\n        </text>\n      ) : (\n        nodeNameArray.map((name, index) => {\n          if ((index + 1) % 2 === 0) {\n            y = y + 20;\n            output = nodeNameArray[index - 1] + \" \" + nodeNameArray[index];\n            return (\n              <text\n                key={index}\n                fill=\"black\"\n                strokeWidth=\"1\"\n                x={x.toString()}\n                y={y.toString()}\n              >\n                {output}\n              </text>\n            );\n          } else if (\n            (index + 1) % 2 !== 0 &&\n            index + 1 === nodeNameArray.length\n          ) {\n            y = y + 20;\n            return (\n              <text\n                key={index}\n                fill=\"black\"\n                strokeWidth=\"1\"\n                x={x.toString()}\n                y={y.toString()}\n              >\n                {name}\n              </text>\n            );\n          } else return \"\";\n        })\n      )}\n    </g>\n  );\n};\n\nexport default function App() {\n  const [translate, containerRef] = useCenteredTree();\n  const wrapper = createRef();\n  return (\n    <div style={containerStyles} ref={containerRef}>\n      <Tree\n        data={orgChart}\n        collapsible={true}\n        enableLegacyTransitions={true}\n        orientation=\"horizontal\"\n        depthFactor=\"250\"\n        shouldCollapseNeighborNodes={false}\n        translate={translate}\n        renderCustomNodeElement={(props) =>\n          renderNodeWithCustomEvents({ ...props, wrapper })\n        }\n      />\n    </div>\n  );\n}\n\nconst Route = styled.div`\n  width: 120px;\n  height: 42px;\n  border: solid 1px #111;\n`"]},"metadata":{},"sourceType":"module"}